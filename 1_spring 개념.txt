* 왜 delete에 getmpping방식을 사용하며
  왜 getmapping에 redirect방식을 사용한거지 ?>,,, member에 logout도 getmapping방식을 사용햇네 ... 왜지 
--> 삭제요청은 단순히 데이터를 처리만 하기 위한 것이므로 post방식으로 굳이 데이터를 전송하는 양식이 없기때문에 get방식을 사용하면된다.

1. GetMapping
- URL에 변수(데이터)를 포함시켜 요청
- 데이터를 Header(헤더)에 포함하여 전송
- URL에 데이터가 노출되어 보안에 취약
- 캐싱할 수 있음
- http post 메서드는 특정한 리소스를 가져오도록 요청
- get요청은 데이터를 가져올때만 사용해야 한다.

2. PostMapping
- URL에 변수(데이터)를 노출하지 않고 요청
- 데이를 body에 포함
- url에 데이터가 노출되지 않아 get방식보다 보안이 높음
- 캐싱할 수 없음
- html양식을 통해 서버에 전송, 서버에 변경사항을 만든다.

* Model객체를 사용하는 이유 
view에 데이터를 전닳할 때 사용한다.

* resultMap을 사용하는 이유
1. mybatis대신  resultMap을 사용하는 이유는 한번으로 AS를 쓸 필요가 없기 때문이다.
2. 일반적으로 DTO클래스의 변수명(VO디렉터리)과 DB 테이블의 필드명이 서로 일치하지 않을경우 사용한다
3. Association : 1:1관계의 테이블을 조인할 때 사용(조인객체)
- property : 조인객체명 /// javaType : 조인객체의 자료형

* 왜 selectcomments를 view controller에 넣어준것일까 ???
  새로운 controller를 만들어서 해줘도 되지 않았을까 ???
-> 요청을 view로 하는데 그 글과 그 글의 댓글도 같이 불러와야하므로 컨트롤러에서 같은 주소를 요청받고 데이터를 같이 불러오기 위해서 해줫다.



*board.xml
1.resultMap 수정 부분

* id로 선언한 부분은 그 항목이 key값이기 때문이다
* 필요없는 값들은 삭제하고 선언하여주엇다
* <select id="selectArticle"  resultMap="articleVoResultMap">
 -> 이 항목을 <resultMap id="articleVoResultMap" type="kr.co.sboard.vo.ArticleVo"> 와	
    <association property="fileVo" javaType="kr.co.sboard.vo.FileVo">이걸로 선언하여준다
    는 것은 articlevo안에 filevo가 선언되어져있어서 두가지를 연결 시켜주기 위한것이다

* resultMap="articleVoResultMap"> 이부분을 resultType이 아니라 resultMap으로 선언하여 준것은 
 위에서 작성한 것들을 articlevo의 내용을 새롭게 map시켜주기 위한것
	

<select id="selectArticle"  resultMap="articleVoResultMap">
SELECT a.*, b.*, b.parent AS `fileParent` FROM `Jboard_article` AS a
LEFT JOIN `Jboard_file` AS b
ON a.seq = b.parent
WHERE `seq`=#{seq};
</select>

* 쿼리문을 위와 같이 바꿔준 이유는 view페이지에 oriName과 이 출력되어야하고
  db에 글을 작성한 페이지에 파일이 올라간 seq나 parent를 연결시켜주기 위한 것이다


